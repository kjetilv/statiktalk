package com.github.kjetilv.statiktalk

internal val senderTemplate
    get() =
        """
package 《s.packidge》

《imports:{import|
import 《import》
} 》
import com.github.kjetilv.statiktalk.api.SendMediatorBase

import 《s.sourcePackidge》.《s.service》

import no.nav.helse.rapids_rivers.RapidsConnection

/*
  This file was generated by statiktalk. Changes will be reverted when you rebuild.
  《if(debug) 》
    
    Imports: 《imports:{import| 《import》 }》
    
    Message:
《ms:{m|
      《m》
}》
    Service: 《s》
    《 endif》
*/

@Suppress("unused")
fun RapidsConnection.《s.serviceCc》(): 《s.service》 =
    《s.service》SendMediator(this)

private class 《s.service》SendMediator(
    rapidsConnection: RapidsConnection
) : SendMediatorBase(rapidsConnection), 《s.service》 {

《ms:{m|
    override fun 《m.serviceName》(
《m.keys:{key|
        《key.name》: 《key.type》《if(key.optional)》?《endif》,
        }》《if(m.contextual)
        》        context: 《m.contextClass》《if(m.contextualNullable)》?《else》《endif》
        《else》《endif》
    ) {
        send《if(m.contextualNullable)》0《else》1《endif》(
            《if(m.contextual)》context《else》null《endif》,
            《if(m.eventName)》"@event_name" to "《m.eventName》",《endif》
《m.keys:{key|
            "《key.name》" to 《key.name》,
            }》)
    \}
}》}
""".trimIndent()
